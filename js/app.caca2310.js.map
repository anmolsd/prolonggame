{"version":3,"file":"js/app.caca2310.js","mappings":"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","sources":["webpack://prolong_game/./src/App.vue","webpack://prolong_game/./src/App.vue?7ccd","webpack://prolong_game/./src/components/home/homeScreen.vue","webpack://prolong_game/./src/components/home/gameTitle.vue","webpack://prolong_game/./src/components/home/gameTitle.vue?16b0","webpack://prolong_game/./src/components/global/raisedIconButton.vue","webpack://prolong_game/./src/components/global/raisedIconButton.vue?22eb","webpack://prolong_game/./src/components/home/homeScreen.vue?3ceb","webpack://prolong_game/./src/components/playerSelection/playerSelectionScreen.vue","webpack://prolong_game/./src/components/playerSelection/playerCard.vue","webpack://prolong_game/./src/stores/settingsStore.js","webpack://prolong_game/./src/stores/sessionWordStore.js","webpack://prolong_game/./src/stores/gameScreenStore.js","webpack://prolong_game/./src/components/playerSelection/playerCard.vue?eeb2","webpack://prolong_game/./src/components/playerSelection/playerSelectionScreen.vue?3165","webpack://prolong_game/./src/components/settings/settingsScreen.vue","webpack://prolong_game/./src/components/settings/settingsScreen.vue?48bb","webpack://prolong_game/./src/components/gameplay/gameScreen.vue","webpack://prolong_game/./src/stores/dictionaryStore.js","webpack://prolong_game/./src/stores/resultsStore.js","webpack://prolong_game/./src/components/gameplay/gameScreen.vue?4815","webpack://prolong_game/./src/components/results/resultsScreen.vue","webpack://prolong_game/./src/components/results/resultsScreen.vue?9549","webpack://prolong_game/./src/components/analysis/analysisScreen.vue","webpack://prolong_game/./src/components/analysis/analysisScreen.vue?c275","webpack://prolong_game/./src/components/rules/rulesScreen.vue","webpack://prolong_game/./src/components/rules/rulesScreen.vue?7311","webpack://prolong_game/./src/main.js","webpack://prolong_game/./src/assets/ sync ^\\.\\/.*\\.svg$","webpack://prolong_game/webpack/bootstrap","webpack://prolong_game/webpack/runtime/chunk loaded","webpack://prolong_game/webpack/runtime/compat get default export","webpack://prolong_game/webpack/runtime/define property getters","webpack://prolong_game/webpack/runtime/global","webpack://prolong_game/webpack/runtime/hasOwnProperty shorthand","webpack://prolong_game/webpack/runtime/publicPath","webpack://prolong_game/webpack/runtime/jsonp chunk loading","webpack://prolong_game/webpack/startup"],"sourcesContent":["<template>\n<router-view v-slot=\"{ Component }\">\n    <transition name=\"fade\" mode=\"out-in\" appear>\n            <div :key=\"Math.random()\">\n             <component :is=\"Component\" />\n            </div>\n  </transition>\n</router-view>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  components: {\n  }\n}\n</script>\n\n<style>\nbody, html {\n  padding: 0;\n  margin: 0;\n  height: 100%;\n  width: 100%;\n  background-color: #f0f0f3;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n}\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.4s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=87cee776\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=87cee776&lang=css\"\n\nimport exportComponent from \"/Users/anmolsingh/prolong_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <GameTitle/>\n  <RaisedIconButton top=\"calc(min(5vw, 5vh))\" left=\"calc(100% - min(15vw, 15vh))\" width=\"calc(min(10vw, 10vh))\" height=\"calc(min(10vw, 10vh))\" imgTop=\"calc(min(1.5vw, 1.5vh))\" imgLeft=\"calc(min(1.5vw, 1.5vh))\" imgSide=\"calc(min(7vw, 7vh))\" label=\"\" icon=\"settings\" toScreen=\"/settings\"/>\n  <RaisedIconButton top=\"calc(50% + 7.5vh)\" left=\"calc(50% - min(20vw, 20vh))\" width=\"calc(min(40vw, 40vh))\" height=\"calc(min(15vh, 15vw))\" imgTop=\"calc(min(4vw, 4vh))\" imgLeft=\"calc(100% - min(10vw, 10vh))\" imgSide=\"calc(min(7vw, 7vh))\" label=\"Start\" icon=\"play\" toScreen=\"/playerSelection\"/>\n  <RaisedIconButton top=\"calc(75% + 5vh)\" left=\"calc(50% - min(20vw, 20vh))\" width=\"calc(min(40vw, 40vh))\" height=\"calc(min(15vh, 15vw))\" imgTop=\"calc(min(4vw, 4vh))\" imgLeft=\"calc(100% - min(10vw, 10vh))\" imgSide=\"calc(min(7vw, 7vh))\" label=\"Rules\" icon=\"howto\" toScreen=\"/rules\"/>\n</template>\n\n<script>\nimport GameTitle from '../home/gameTitle.vue'\nimport RaisedIconButton from '../global/raisedIconButton.vue'\nexport default {\n  name: 'HomeScreen',\n  components: {\n    GameTitle,\n    RaisedIconButton,\n  }\n}\n</script>\n","<template>\n    <div class = \"outerFrame\">\n        <div class = \"innerFrame\">\n            <span class = \"title\">\n                Pro-Long\n            </span>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'GameTitle',\n    props: {},\n}\n</script>\n\n<style scoped>\ndiv {\n    border-radius: 1vw;\n}\n.outerFrame {\n    position: fixed;\n    top: calc(50% - min(30vw, 30vh));\n    height: calc(min(30vw, 30vh));\n    left: calc(50% - min(35vw, 35vh));\n    width: calc(min(70vw, 70vh));\n    box-shadow: -10px -10px 10px rgba(255, 255, 255, 0.7), 10px 10px 10px rgba(174, 174, 192, 0.2);\n}\n.innerFrame {\n    display: table;\n    position: absolute;\n    top: 2vw;\n    left: 2vw;\n    height: calc(100% - 4vw);\n    width: calc(100% - 4vw);\n    box-shadow: -10px -10px 10px rgba(255, 255, 255, 0.7) inset, 10px 10px 10px rgba(174, 174, 192, 0.2) inset;\n    text-align: center;\n}\n.title {\n    display: table-cell;\n    vertical-align: middle;\n    font-size: calc(max(6vw, 6vh));\n    font-weight: 600;\n    color: #354a68;\n}\n</style>","import { render } from \"./gameTitle.vue?vue&type=template&id=6a959bd8&scoped=true\"\nimport script from \"./gameTitle.vue?vue&type=script&lang=js\"\nexport * from \"./gameTitle.vue?vue&type=script&lang=js\"\n\nimport \"./gameTitle.vue?vue&type=style&index=0&id=6a959bd8&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/anmolsingh/prolong_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6a959bd8\"]])\n\nexport default __exports__","<template>\n    <button :style=\"style\" @click=\"navigate()\"><span>{{label}}</span> <img :src=\"require(`@/assets/${icon}.svg`)\" alt=\"img\" :style=\"`filter: brightness(0) saturate(100%) invert(26%) sepia(20%) saturate(1132%) hue-rotate(176deg) brightness(91%) contrast(88%); position: absolute; top: ${this.imgTop}; left: ${this.imgLeft}; width: ${this.imgSide}; height: ${this.imgSide};`\"/> </button>\n</template>\n\n<script>\nexport default {\n    name: 'RaisedIconButton',\n    props: [\n        'label',\n        'icon',\n        'top',\n        'left',\n        'width',\n        'height',\n        'imgTop',\n        'imgLeft',\n        'imgSide',\n        'toScreen',\n    ],\n    methods: {\n        navigate() {\n            if(this.toScreen === \"back\") {\n                return this.$router.go(-1);\n            }\n            return this.$router.push({path: this.toScreen});\n        }\n    },\n    computed: {\n        style() {\n            return `position: fixed; top: ${this.top}; left: ${this.left}; width: ${this.width}; height: ${this.height};`\n        },\n    }\n}\n</script>\n\n<style scoped>\nbutton {\n    border: none;\n    box-shadow: -10px -10px 10px rgba(255, 255, 255, 0.7), 10px 10px 10px rgba(174, 174, 192, 0.5);\n    border-radius: 1vw;\n    padding: calc(max(2vw, 2vh));\n    background-color: #f0f0f3;\n}\nbutton:active {\n    transform: translateY(1vh);\n    box-shadow: -10px -10px 10px rgba(255, 255, 255, 0.7) inset, 10px 10px 10px rgba(174, 174, 192, 0.2) inset;\n}\nspan {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    float: right;\n    position: relative;\n    right: 40%;\n    font-size: calc(max(3vw, 3vh));\n    font-weight: 800;\n    color: #354a68;\n}\n</style>","import { render } from \"./raisedIconButton.vue?vue&type=template&id=7032ab25&scoped=true\"\nimport script from \"./raisedIconButton.vue?vue&type=script&lang=js\"\nexport * from \"./raisedIconButton.vue?vue&type=script&lang=js\"\n\nimport \"./raisedIconButton.vue?vue&type=style&index=0&id=7032ab25&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/anmolsingh/prolong_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7032ab25\"]])\n\nexport default __exports__","import { render } from \"./homeScreen.vue?vue&type=template&id=34c05b4d\"\nimport script from \"./homeScreen.vue?vue&type=script&lang=js\"\nexport * from \"./homeScreen.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/anmolsingh/prolong_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n    <RaisedIconButton top=\"calc(min(5vw, 5vh))\" left=\"calc(100% - min(15vw, 15vh))\" width=\"calc(min(10vw, 10vh))\" height=\"calc(min(10vw, 10vh))\" imgTop=\"calc(min(1.5vw, 1.5vh))\" imgLeft=\"calc(min(1.5vw, 1.5vh))\" imgSide=\"calc(min(7vw, 7vh))\" label=\"\" icon=\"settings\" toScreen=\"settings\"/>\n    <RaisedIconButton top=\"calc(min(5vw, 5vh))\" left=\"calc(min(5vw, 5vh))\" width=\"calc(min(10vw, 10vh))\" height=\"calc(min(10vw, 10vh))\" imgTop=\"calc(min(1.5vw, 1.5vh))\" imgLeft=\"calc(min(1.5vw, 1.5vh))\" imgSide=\"calc(min(7vw, 7vh))\" label=\"\" icon=\"backbutton\" toScreen=\"back\"/>\n    <div class=\"upper\"><span> 1v1 </span></div>\n    <PlayerCard left=\"calc(50% - min(25vw, 25vh))\" top=\"19vh\" avatar=\"baby\" label=\"BabyBot\"/>\n    <PlayerCard left=\"calc(50% - min(25vw, 25vh))\" top=\"34vh\" avatar=\"buff\" label=\"BuffBot\"/>\n    <PlayerCard left=\"calc(50% - min(25vw, 25vh))\" top=\"49vh\" avatar=\"boor\" label=\"BoorBot\"/>\n    <div class=\"lower\"><span> Multiplayer </span></div>\n    <PlayerCard left=\"calc(50% - min(25vw, 25vh))\" top=\"79vh\" avatar=\"multi\" label=\"BotClub\"/>\n    </div>\n</template>\n\n<script>\nimport RaisedIconButton from '../global/raisedIconButton.vue'\nimport PlayerCard from '../playerSelection/playerCard.vue'\nexport default {\n    name: 'PlayerSelectionScreen',\n    components: {\n        RaisedIconButton,\n        PlayerCard,\n    }\n}\n</script>\n\n<style scoped>\nspan {\n    font-size: calc(max(3vw, 3vh));\n    font-weight: 600;\n    color: #354a68; \n}\n.upper {\n    position: absolute;\n    top: 10vh;\n    left: 20%;\n}\n.lower {\n    position: absolute;\n    top: 70vh;\n    left: 20%;\n}\n</style>","<template>\n    <button @click=\"setAndNavigate()\" :style=\"`position: absolute; top: ${top}; left: ${left};`\">\n        <span class=\"heading\">{{label}}</span>\n        <img :src=\"require(`@/assets/${avatar}.svg`)\" alt=\"img\" :style=\"`filter: brightness(0) saturate(100%) invert(26%) sepia(20%) saturate(1132%) hue-rotate(176deg) brightness(91%) contrast(88%); position: absolute; top: ${spacing}; left: ${spacing}; width: calc(min(8.75vw, 8.75vh)); height: calc(min(8.75vw, 8.75vh));`\"/>\n        <img :src=\"require(`@/assets/forwardbutton.svg`)\" alt=\"img\" :style=\"`filter: brightness(0) saturate(100%) invert(26%) sepia(20%) saturate(1132%) hue-rotate(176deg) brightness(91%) contrast(88%); position: absolute; top: ${spacing}; left: calc(95% - ${spacing} - min(8.75vw, 8.75vh)); width: calc(min(8.75vw, 8.75vh)); height: calc(min(8.75vw, 8.75vh));`\"/>\n    </button>\n</template>\n\n<script>\nimport { useGameScreenStore } from '@/stores/gameScreenStore'\nimport {useSessionWordStore} from '@/stores/sessionWordStore'\nexport default {\n    name: 'PlayerCard',\n    props: [\n        'top',\n        'left',\n        'label',\n        'avatar',\n    ],\n    setup() {\n        const gameScreenStore = useGameScreenStore();\n        const sessionWordStore = useSessionWordStore();\n        sessionWordStore.lastPlayerEndIndex = 0;\n        gameScreenStore.$reset();\n        return {gameScreenStore, sessionWordStore};\n    },\n    methods: {\n        setAndNavigate() {\n            this.sessionWordStore.setPlayers(this.label);\n            return this.$router.push({path: 'game'});\n        }\n    },\n    computed: {\n        spacing() {\n            return `calc(min(1.875vw, 1.875vh))`;\n        },\n    }\n}\n</script>\n\n<style scoped>\nbutton {\n    position: absolute;\n    background-color: #f0f0f3;\n    border: none;\n    box-shadow: -10px -10px 10px rgba(255, 255, 255, 0.7), 10px 10px 10px rgba(174, 174, 192, 0.5);\n    border-radius: 1vw;\n    padding: calc(max(2vw, 2vh));\n    width: calc(min(50vw, 60vh));\n    height: calc(min(12.5vw, 12.5vh));\n}\nbutton:active {\n    transform: translateY(1vh);\n    box-shadow: -10px -10px 10px rgba(255, 255, 255, 0.7) inset, 10px 10px 10px rgba(174, 174, 192, 0.2) inset;\n}\n.heading {\n    font-family: Avenir, Arial, Helvetica, sans-serif;\n    font-size: calc(max(2vw, 2vh));\n    font-weight: 600;\n    color: #354a68; \n}\n</style>","import { defineStore } from \"pinia\";\n\nexport const useSettingsStore = defineStore(\n    {\n        id: 'settingsStore',\n        state: () => ({\n            minLengthOfValidWord: 4,\n            numBotsMultiplayer: 2,\n            multiplayerMixed: false,\n            difficultyMultiplayer: 2,\n            timePerRound: 60,\n            trieLoaded: false,\n    }),\n}\n)","import { defineStore } from \"pinia\";\nimport { useSettingsStore } from \"@/stores/settingsStore\";\nexport const useSessionWordStore = defineStore(\n    {\n        id: 'sessionWordStore',\n        state: () => ({\n            currentPlayers: ['You', 'BabyBot'],\n            wordsPlayed: [],\n            lastPlayerEndIndex: 0,\n        }),\n        actions: {\n            setPlayers(choice) {\n                this.currentPlayers = ['You', 'Babybot'];\n                const settingsStore = useSettingsStore();\n                if(choice === \"BotClub\") {\n                    var generatedPlayers = ['You'];\n                    for(let i = 0; i < settingsStore.numBotsMultiplayer; i++) {\n                        generatedPlayers.push(['BabyBot', 'BuffBot', 'BoorBot'][settingsStore.multiplayerMixed ? Math.floor(Math.random() * settingsStore.difficultyMultiplayer) : (settingsStore.difficultyMultiplayer - 1)] + '_' + i.toString())\n                    }\n                    this.currentPlayers = generatedPlayers;\n                } else {\n                this.currentPlayers[1] = choice;\n                }\n            },\n        }\n    }\n)","import { defineStore } from \"pinia\";\nimport { useSettingsStore } from '@/stores/settingsStore'\nimport { useSessionWordStore } from \"@/stores/sessionWordStore\";\n\nexport const useGameScreenStore = defineStore(\n    {\n        id: 'gameScreenStore',\n        state: () => ({\n            currentWordFragment: '',\n            currentPlayerIndex: 0,\n            timerArray: [60, 60],\n            keypressQueue: [],\n            gameActive: false,\n            gameEnded: false,\n            depressedIndex: -1,\n            isUserRespondingToBluff: false,\n            frozenBluffFragment: '',\n            bluffCompetingPlayer: '',\n            }),\n        actions: {\n            completeGameSetup() {\n                const sessionWordStore = useSessionWordStore();\n                var currentPlayers = sessionWordStore.currentPlayers;\n                this.currentPlayerIndex = sessionWordStore.lastPlayerEndIndex;\n                const settingsStore = useSettingsStore();\n                this.timerArray = Array(currentPlayers.length).fill(settingsStore.timePerRound);\n            }\n        }\n}\n)","import { render } from \"./playerCard.vue?vue&type=template&id=f06ef0fa&scoped=true\"\nimport script from \"./playerCard.vue?vue&type=script&lang=js\"\nexport * from \"./playerCard.vue?vue&type=script&lang=js\"\n\nimport \"./playerCard.vue?vue&type=style&index=0&id=f06ef0fa&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/anmolsingh/prolong_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f06ef0fa\"]])\n\nexport default __exports__","import { render } from \"./playerSelectionScreen.vue?vue&type=template&id=aa9b672e&scoped=true\"\nimport script from \"./playerSelectionScreen.vue?vue&type=script&lang=js\"\nexport * from \"./playerSelectionScreen.vue?vue&type=script&lang=js\"\n\nimport \"./playerSelectionScreen.vue?vue&type=style&index=0&id=aa9b672e&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/anmolsingh/prolong_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-aa9b672e\"]])\n\nexport default __exports__","<template>\n    <h1> Settings </h1>\n    <RaisedIconButton top=\"calc(min(5vw, 5vh))\" left=\"calc(min(5vw, 5vh))\" width=\"calc(min(10vw, 10vh))\" height=\"calc(min(10vw, 10vh))\" imgTop=\"calc(min(1.5vw, 1.5vh))\" imgLeft=\"calc(min(1.5vw, 1.5vh))\" imgSide=\"calc(min(7vw, 7vh))\" label=\"\" icon=\"backbutton\" toScreen=\"back\"/>\n    <table>\n        <colgroup>\n        <col class=\"fifty\">\n        <col class=\"fifty\">\n        </colgroup>\n        <tr> <th>\n    <h2> Minimum length of valid word: </h2>\n    </th>\n    <th>\n    <div class=\"dropdown\">\n        <VueMultiselect\n        :v-model=\"selectedMinLength\"\n        :options=\"minLengths\"\n        :searchable=\"false\"\n        :close-on-select=\"true\"\n        :allow-empty=\"false\"\n        @update:model-value=\"updateMinLength\"\n        :placeholder=\"selectedMinLength.toString()\"\n        :select-label=\"''\"\n        />\n    </div>\n    </th>\n        </tr>\n        <tr>\n            <th>\n    <h2> Number of bots in multiplayer: </h2>\n    </th>\n        <th>\n    <div class=\"dropdown\">\n        <VueMultiselect\n        :v-model=\"selectedNumberOfBots\"\n        :options=\"numberOfBots\"\n        :searchable=\"false\"\n        :close-on-select=\"true\"\n        :allow-empty=\"false\"\n        @update:model-value=\"updateNumberOfBots\"\n        :placeholder=\"selectedNumberOfBots.toString()\"\n        :select-label=\"''\"\n        />\n    </div>\n    </th>\n        </tr>\n        <tr>\n            <th>\n    <h2> Maximum difficulty in multiplayer: </h2>\n    </th>\n        <th>\n    <div class=\"dropdown\">\n        <VueMultiselect\n        :v-model=\"multiplayerDifficulty\"\n        :options=\"multiplayerDifficultyOptions\"\n        :searchable=\"false\"\n        :close-on-select=\"true\"\n        :allow-empty=\"false\"\n        @update:model-value=\"updateMultiplayerDifficulty\"\n        :placeholder=\"multiplayerDifficulty\"\n        :select-label=\"''\"\n        />\n    </div>\n    </th>\n    </tr>\n        <tr>\n            <th>\n    <h2> Allow mixing of difficulty levels in multiplayer: </h2>\n    </th>\n        <th>\n    <div class=\"dropdown\">\n        <VueMultiselect\n        :v-model=\"allowMixing\"\n        :options=\"mixingOptions\"\n        :searchable=\"false\"\n        :close-on-select=\"true\"\n        :allow-empty=\"false\"\n        @update:model-value=\"updateMixing\"\n        :placeholder=\"allowMixing\"\n        :select-label=\"''\"\n        />\n    </div>\n    </th>\n        </tr>\n        <tr>\n            <th>\n    <h2> Time in seconds for each player: </h2>\n    </th>\n        <th>\n    <div class=\"dropdown\">\n        <VueMultiselect\n        :v-model=\"timeInSeconds\"\n        :options=\"timeOptions\"\n        :searchable=\"false\"\n        :close-on-select=\"true\"\n        :allow-empty=\"false\"\n        @update:model-value=\"updateTimePerRound\"\n        :placeholder=\"timeInSeconds.toString()\"\n        :select-label=\"''\"\n        />\n    </div>\n    </th>\n    </tr>\n</table>\n</template>\n\n<script>\nimport RaisedIconButton from '../global/raisedIconButton.vue'\nimport VueMultiselect from 'vue-multiselect';\nimport {useSettingsStore} from '@/stores/settingsStore';\nexport default {\n    name: 'SettingsScreen',\n    data () {\n        return {\n        selectedMinLength: 3,\n        minLengths: [3, 4, 5, 6, 7, 8],\n        selectedNumberOfBots: 2,\n        numberOfBots: [2, 3, 4, 5, 6, 7, 8, 9],\n        allowMixing: false,\n        mixingOptions: ['true', 'false'],\n        timeInSeconds: 60,\n        timeOptions: [30, 60, 90, 120],\n        multiplayerDifficulty: 'Buff',\n        multiplayerDifficultyOptions: ['Baby', 'Buff', 'Boor'],\n        }\n    },\n    setup() {\n        const settingsStore = useSettingsStore();\n        return {settingsStore}\n    },\n    mounted() {\n        console.log(this.selectedMinLength, this.minLengthOfValidWord);\n        this.selectedMinLength = this.settingsStore.minLengthOfValidWord;\n        this.selectedNumberOfBots = this.settingsStore.numBotsMultiplayer;\n        this.allowMixing = this.settingsStore.multiplayerMixed;\n        this.timeInSeconds = this.settingsStore.timePerRound;\n        this.multiplayerDifficulty = this.multiplayerDifficultyOptions[this.settingsStore.difficultyMultiplayer - 1];\n    },\n    methods: {\n        updateMinLength(value) {\n            this.selectedMinLength = value;\n            this.settingsStore.minLengthOfValidWord = value;\n            console.log('updated minimum length.');\n        },\n        updateNumberOfBots(value) {\n            this.selectedNumberOfBots = value;\n            this.settingsStore.numBotsMultiplayer = value;\n            console.log(\"updated num bots.\");\n        },\n        updateMixing(value) {\n            this.allowMixing = value;\n            this.settingsStore.multiplayerMixed = value === 'true' ? true : false;\n            console.log(\"updated mixing\");\n        },\n        updateTimePerRound(value) {\n            this.timeInSeconds = value;\n            this.settingsStore.timePerRound = value;\n            console.log(\"updated time per round\");\n        },\n        updateMultiplayerDifficulty(value) {\n            this.multiplayerDifficulty = value;\n            this.settingsStore.difficultyMultiplayer = this.multiplayerDifficultyOptions.indexOf(value) + 1;\n            console.log(\"updated difficulty\");\n        }\n    },\n    components: {\n        RaisedIconButton,\n        VueMultiselect\n    }\n}\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.css\"></style>\n<style scoped>\n.dropdown {\n    width: 30% !important;\n    margin-left: auto;\n    margin-right: auto;\n}\n:deep(.multiselect__placeholder) {\n    color: #354a68 !important;\n    font-weight: 500;\n    font-size: calc(max(1vw, 1vh));\n}\n:deep(.multiselect__select) {\n    transform: scale(1.5);\n}\ntable {\n    position: fixed;\n    top: 10%;\n    table-layout: fixed;\n    width: 80%;\n    height: 80%;\n    left: 10%;\n    text-align: right;\n}\n.fifty {\n    width: 50%;\n}\nh1 {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    font-size: calc(max(2.5vw, 2.5vh));\n    font-weight: 600;\n    color: #354a68;\n}\nh2 {\n    font-size: calc(max(1.5vw, 1.5vh));\n    color: #354a68;\n    font-weight: 600;\n}\n</style>","import { render } from \"./settingsScreen.vue?vue&type=template&id=02c0f972&scoped=true\"\nimport script from \"./settingsScreen.vue?vue&type=script&lang=js\"\nexport * from \"./settingsScreen.vue?vue&type=script&lang=js\"\n\nimport \"vue-multiselect/dist/vue-multiselect.css?vue&type=style&index=0&lang=css\"\nimport \"./settingsScreen.vue?vue&type=style&index=1&id=02c0f972&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/anmolsingh/prolong_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02c0f972\"]])\n\nexport default __exports__","<template>\n    <vue3-snackbar top :duration=\"8000\"></vue3-snackbar>\n    <Transition mode=\"out-in\" name=\"fade\">\n    <div v-if=\"isUserManagingBluff\">\n            <h1>Well, somebody thinks <span :style=\"`color: ${getHumanColor}`\">You</span> are bluffing. Type to complete your word and hit Enter. </h1>\n            <div class=\"wordFrame\">\n                <TransitionGroup name=\"word\">\n                        <button v-for=\"(l, index) in currentFragment\" class=\"letterButton\" :key=\"l + index.toString()\" :id=\"l + index.toString()\">\n                            <span :style=\"`color: ${getHumanColor}`\">{{l}}</span>\n                        </button>\n                </TransitionGroup>\n            </div>\n    </div>\n    <div v-else>\n    <div class=\"timer\" :style=\"`border: ${getHumanColor} solid 7.5px;`\"><span :style=\"`color: ${getHumanColor}`\">{{active ? humanTimeLeft : ended ? '◼' : '| |'}}</span></div>\n    <div class=\"wordFrame\">\n        <TransitionGroup name=\"word\">\n                <button v-for=\"(l, index) in currentFragment\" :class=\"index <= depressed ? 'depressedButton' : 'letterButton'\" :key=\"l + index.toString()\" @click=\"depressButtons(index)\" :id=\"l + index.toString()\">\n                    <span :style=\"`color: ${playerColors[(index + startOffsetIndex) % totalPlayers]}`\">{{l}}</span>\n                </button>\n        </TransitionGroup>\n        <div :v-if=\"currentPlayer === 'You'\" class=\"letterButton\"> <span :style=\"`color: ${currentColor}; opacity: 0.5;`\">{{latestValidKeypress}}</span> </div> \n    </div>  \n    <Transition name=\"slide-up\" mode=\"out-in\"><div class=\"currentPlayerTime indentLeft\" :style=\"`color: ${currentColor}`\" v-if=\"true\" :key=\"currentPlayer\"> {{currentPlayer}} </div></Transition>\n    <Transition name=\"slide-up\" mode=\"out-in\"><div class=\"currentPlayerTime\" :style=\"`color: ${currentColor}`\" v-if=\"currentPlayer !== 'You'\" :key=\"currentPlayer\"> {{getCurrentPlayerTime()}} </div></Transition>\n    <button class=\"challenge\" @click=\"challenge\"> <span>Valid</span> </button>\n    <button class=\"bluff\" @click=\"bluff\"> <span>Invalid</span> </button>\n    </div>\n    </Transition>\n</template>\n\n<script>\nimport { useGameScreenStore } from '@/stores/gameScreenStore'\nimport { useDictionaryStore } from '@/stores/dictionaryStore'\nimport { useSettingsStore } from '@/stores/settingsStore'\nimport { useSessionWordStore } from '@/stores/sessionWordStore';\nimport { useResultsStore } from '@/stores/resultsStore';\nimport { useSnackbar } from \"vue3-snackbar\";\nasync function getLetterAsync(object) {\n    var self = object;\n    return new Promise(resolve => setTimeout(() => {\n        var result = self.getBotMove(self.currentFragment, self.currentPlayerIndex);\n        resolve(result);\n    }, Math.max(6 - self.currentFragment.length, 3) * 1000));\n}\nexport default {\n    name: 'GameScreen',\n    setup() {\n        const gameScreenStore = useGameScreenStore();\n        const dictionaryStore = useDictionaryStore();\n        const settingsStore = useSettingsStore();\n        const sessionWordStore = useSessionWordStore();\n        const resultsStore = useResultsStore();\n        const snackbar = useSnackbar();\n        resultsStore.$reset();\n        gameScreenStore.isUserRespondingToBluff = false;\n        gameScreenStore.frozenBluffFragment = '';\n        gameScreenStore.bluffCompetingPlayer = '';\n        var playerColors = [\n            '#3f51b5',\n            '#f44336',\n            '#009688',\n            '#795548',\n            '#e81e63',\n            '#2196f3',\n            '#4caf50',\n            '#ffc107',\n            '#9e9e9e',\n            '#9c27b0',\n            '#673ab7',\n            '#03a9f4',\n            '#ff9800',\n            '#607d8b',\n            '#00bcd4',\n            '#ff5722', \n            '#000000',\n        ];\n        var rotateRightColorIndex = Math.floor(Math.random() * playerColors.length);\n        playerColors = playerColors.slice(rotateRightColorIndex).concat(playerColors.slice(0, rotateRightColorIndex));\n        dictionaryStore.generationRoutine();\n        let nonIdealMoveProbability = {'BabyBot': 0.8, 'BuffBot': 0.3, 'BoorBot': 0.05};\n        var groupBy = function(xs, key) {\n            return xs.reduce(function(rv, x) {\n                (rv[x[key]] = rv[x[key]] || []).push(x);\n                return rv;\n            }, {});\n        };\n        return {gameScreenStore, dictionaryStore, settingsStore, groupBy, nonIdealMoveProbability, sessionWordStore, playerColors, resultsStore, snackbar};\n    },\n    mounted() {\n        this.snackbar.clear();\n        if(this.sessionWordStore.currentPlayers[this.gameScreenStore.currentPlayerIndex] !== 'You') {\n            this.gameActive = true;\n            var result = this.getBotMove('', this.currentPlayerIndex);\n            this.gameScreenStore.keypressQueue.push(result);\n            this.gameScreenStore.keypressQueue.push('Enter');\n            this.updateFragment();\n        }\n    },\n    methods: {\n        updateTimer() {\n            if(this.gameScreenStore.gameActive && !this.gameScreenStore.gameEnded) {\n                if(parseInt(this.currentPlayerTime) <= 0) {\n                    \n                    this.gameScreenStore.gameActive = false;\n                    this.gameScreenStore.gameEnded = true;\n                    this.$router.push('/results');\n                }\n                setTimeout(() => {                    \n                this.timers[this.gameScreenStore.currentPlayerIndex]--;\n                this.updateTimer();\n                }, 1000);\n            }\n        },\n        depressButtons(index) {\n            this.gameScreenStore.keypressQueue.push('Enter');\n            if(this.gameScreenStore.depressedIndex != (-1)) {\n                this.gameScreenStore.depressedIndex = -1;\n                return; \n            }\n            if((index + 1) < this.settingsStore.minLengthOfValidWord) {\n                this.snackbar.clear();\n                this.snackbar.add({type: 'warning', title: 'Error', text: 'Your minimum word length is set to ' + this.settingsStore.minLengthOfValidWord.toString() + '.'});\n                return;\n            } else if(this.currentPlayer !== 'You'){\n                   this.snackbar.clear();\n                   this.snackbar.add({type: 'warning', title: 'Error', text: 'Please wait for your turn to challenge other players.'});\n                return;\n            }\n            else {\n                this.gameScreenStore.depressedIndex = index;\n            }\n        },\n        willIdealMove(playerIndex) {\n            for(let i in this.nonIdealMoveProbability) {\n                if(this.sessionWordStore.currentPlayers[playerIndex].includes(i)) {\n                    return (Math.random() > this.nonIdealMoveProbability[i]);\n                }\n            }\n        },\n        gameEnd(event) {\n            this.gameScreenStore.gameActive = false;\n            this.gameScreenStore.gameEnded = true;\n            this.sessionWordStore.wordsPlayed.push(this.currentFragment);\n            var result = '';\n            var p1 = this.currentPlayer;\n            var p2 = '';\n            var p2Index = 0;\n            var resultPossibilities = ['lost', 'won'];\n            var endWords = ['correctly', 'incorrectly'];\n            var infoPossibilities = ['invalid', 'valid'];\n            var wordToAnalyze = (this.depressed !== -1 ? this.currentFragment.slice(0, this.depressed + 1) : this.currentFragment);\n            var truth = (wordToAnalyze in this.dictionaryStore.wordTable);\n            var info = (truth ? (`'<a href=\"https://www.merriam-webster.com/dictionary/${wordToAnalyze}\" target=\"_blank\" rel=\"noreferrer noopener\">` + wordToAnalyze + '</a>\\'') : (\"'\" + wordToAnalyze + \"'\")) + ' is ' + infoPossibilities[+ truth] + '. The ' + event + ' was called ';\n            if(event === 'bluff') {\n                p2Index = (this.currentPlayerIndex - 1) < 0 ? (this.totalPlayers - 1) : (this.currentPlayerIndex - 1);\n                p2 = this.sessionWordStore.currentPlayers[p2Index]; // the player who supposedly bluffed\n                if(p2 === 'You') {\n                    // user has been asked to complete the bluff\n                    this.gameScreenStore.isUserRespondingToBluff = true;\n                    this.gameScreenStore.frozenBluffFragment = this.currentFragment;\n                    this.gameScreenStore.bluffCompetingPlayer = p1;\n                    this.currentPlayer = 'You';\n                    return;\n                } else {\n                    // either user bluffed bot or bot bluffed bot\n                    var foundWord = false;\n                    var p2Type = p2.replace(/[^A-Za-z]/g, '');\n                    console.log(p2Type, this.nonIdealMoveProbability);\n                    for(let j in this.dictionaryStore.wordTable) {\n                        if(j.startsWith(this.currentFragment)) {\n                            if(this.dictionaryStore.wordTable[j][2] <= (1.2 - this.nonIdealMoveProbability[p2Type]) * 100) {\n                            result = 'lost';\n                            info = p2 + ` was successfully able to quote '<a href=\"https://www.merriam-webster.com/dictionary/${j}\" target=\"_blank\" rel=\"noreferrer noopener\">` + j + '</a>\\' as a valid word possible from here.';\n                            foundWord = true;\n                            }\n                        }\n                    }\n                    if(!foundWord) {\n                        result = 'won';\n                        info = p2 + ' wasn\\'t able to come up with a successful word after \\'' + this.currentFragment + '.\\''; \n                    }\n                }\n            } else {\n                p2Index = (wordToAnalyze.length - 1 + this.startOffsetIndex) % this.totalPlayers;\n                p2 = this.sessionWordStore.currentPlayers[p2Index];\n                result = resultPossibilities[+ truth];\n                info += endWords[+ !truth];\n                info += '.';\n            }\n            console.log(event, p1, p2, result, info, truth);\n            // if(result === 'won') {\n            //     this.sessionWordStore.lastPlayerEndIndex = this.currentPlayerIndex;\n            // } else {\n            //     this.sessionWordStore.lastPlayerEndIndex = p2Index;\n            // }\n            this.resultsStore.p1 = p1;\n            this.resultsStore.p2 = p2;\n            this.resultsStore.result = result;\n            this.resultsStore.info = info;\n            this.resultsStore.event = event;\n            this.$router.push({path: '/results'});\n        },\n        bluff() {\n                this.gameEnd('bluff');\n        },\n        challenge() {\n            if(this.currentFragment.length >= this.settingsStore.minLengthOfValidWord) {\n                if(this.depressed === -1 && this.currentPlayer === 'You') {\n                    if(this.totalPlayers === 2) {\n                        this.gameEnd('challenge');\n                    } else {\n                        // error: no fragment depressed.\n                        this.snackbar.clear();\n                        this.snackbar.add({type: 'warning', title: 'Error', text: 'First depress the word fragment button on which you think the word ends, then press \\'Challenge\\''});\n                    }\n                } else {\n                this.gameEnd('challenge');\n                }\n            } else {\n                this.snackbar.clear();\n                this.snackbar.add({type: 'warning', title: 'Error', text: 'Your minimum word length is set to ' + this.settingsStore.minLengthOfValidWord.toString() + '.'});                    \n            }\n        },\n        async updateFragment() {\n            if(!this.gameScreenStore.gameEnded) {\n                var targetIndex = this.gameScreenStore.keypressQueue.length - 2;\n                var inputtedLetter = this.gameScreenStore.keypressQueue.slice(targetIndex, targetIndex + 1)[0];\n                if(inputtedLetter[0] === '!') {\n                    this.gameScreenStore.gameEnded = true;\n                    this.gameEnd('bluff');\n                } else if(inputtedLetter[0] === '$') {\n                    this.gameScreenStore.gameEnded = true;\n                    this.gameEnd('challenge');\n                }\n                if(inputtedLetter.match(/[a-z]/i) && inputtedLetter.length === 1) {\n                    this.gameScreenStore.currentWordFragment += inputtedLetter;\n                    this.gameScreenStore.currentPlayerIndex += 1;\n                    this.gameScreenStore.currentPlayerIndex %= this.gameScreenStore.timerArray.length;\n                    if(this.currentFragment.length === 1) {\n                        this.gameScreenStore.gameActive = true;\n                        this.updateTimer();\n                }\n                }\n                if(this.currentPlayer != \"You\" && !this.gameScreenStore.gameEnded) {\n                    await getLetterAsync(this).then((result) => {\n                        this.gameScreenStore.keypressQueue.push(result);\n                        this.gameScreenStore.keypressQueue.push('Enter');\n                        this.updateFragment();\n                    });\n                }\n            }\n        },\n        getBotMove(wordFragment, index) {\n            // $ -> call challenge, ! -> call bluff\n            var playerType = this.currentPlayer;\n            playerType = playerType.replace(/[^A-Za-z]/g, '');\n            console.log(this.currentPlayer);\n            var roundErrorTerm = (this.willIdealMove(index) ? 0 : 1);\n            var letters = \"abcdefghijklmnopqrstuvwxyz\";\n            var vocabularyStrengthFactor = 1 + Math.random() * 0.3;\n            if(wordFragment.length >= this.settingsStore.minLengthOfValidWord) {\n                // check for challenge\n            for(let l = (Math.max(wordFragment.length - this.totalPlayers + 1, this.settingsStore.minLengthOfValidWord)); l <= wordFragment.length; l++) {\n                if(wordFragment.slice(0, l + 1) in this.dictionaryStore.wordTable) {\n                    console.log(\"this is a valid word.\")\n                    if(this.willIdealMove(index)) {\n                        return '$' + l.toString();\n                    }\n                }\n            }\n        }\n        else if(wordFragment.length === 0) {\n            return letters[Math.floor(Math.random() * letters.length)];\n        }\n            var results = [];\n            for(var l of letters) {\n                var possibleWordsUponAddingL = this.dictionaryStore.trie.search(wordFragment + l);\n                var groupedByLengthWords = this.groupBy(possibleWordsUponAddingL, 'length');\n                var wins = 0;\n                var losses = 0;\n                var unabridged = 0;\n                var abridged = 0;\n                for(var length in groupedByLengthWords) {\n                    var possibleWordsUponAddingLOfGivenLength = groupedByLengthWords[length];\n                    for(var w of possibleWordsUponAddingLOfGivenLength) {\n                        if(w.length < this.settingsStore.minLengthOfValidWord) {\n                            continue;\n                        }\n                        // unabridged: 60 - 100\n                        if(this.dictionaryStore.wordTable[w][2] > (vocabularyStrengthFactor - this.nonIdealMoveProbability[playerType]) * 100) {\n                            continue;\n                        }    \n                        if(this.dictionaryStore.wordTable[w][1] === 'U') {\n                            unabridged += 1;\n                        } else {\n                            abridged += 1;\n                        }\n                        var filteredContainingLengths = this.dictionaryStore.wordTable[w][0].filter((x) => x > Math.max(wordFragment.length, this.settingsStore.minLengthOfValidWord));\n                        if(filteredContainingLengths.length === 0) {\n                            // ideal word\n                            if((length - index - 1) % this.totalPlayers === 0) {\n                                // loss\n                                losses += 1;\n                            } else {\n                                wins += 1;\n                            }\n                        } // non ideal word\n                        else {\n                            var potentialResults = [];\n                            var loss = false;\n                            for(var cl of filteredContainingLengths) {\n                                if((cl - index - 1) % this.totalPlayers === 0) {\n                                    if(this.willIdealMove(index)) {\n                                    potentialResults.push('L');\n                                    loss = true;\n                                    } else {\n                                        potentialResults.push(['L', 'W'][((length - index - 1) % this.totalPlayers) > 0]);\n                                    }\n                                } else {\n                                    if(loss && this.willIdealMove(index)) {\n                                        potentialResults.push('L');\n                                    } else {\n                                    potentialResults.push('W');\n                                    }\n                                }\n                            }\n                            var ls = potentialResults.filter((x) => x === 'L').length;\n                            losses += ls;\n                            wins += potentialResults.length - ls;\n                        }   \n                    }\n                }\n                //console.log('for fragment:', wordFragment, 'if I say', l, 'I think my results are - L:', losses, 'W: ', wins, 'U:', unabridged, 'A:', abridged);\n                var wlPercentage = wins/(wins + losses);\n                //console.log(roundErrorTerm);\n                results.push([l, losses + wins === 0 ? 0 : (roundErrorTerm ? wins * wlPercentage : wlPercentage), unabridged === 0 ? abridged : abridged / unabridged, wins === 0, losses === 0]);\n            }\n            // if baby: if round error: also filter on letters where losses can happen\n            var finalChoices = results.filter((x) => !(x[3] === true && x[4] === true) && (roundErrorTerm ? (x[4] === false) : true)).sort((a, b) => a[1] > b[1]);\n            //console.log(finalChoices);\n            if(finalChoices.length === 0) {\n                // choose to bluff\n                if(!this.willIdealMove(index) && !this.willIdealMove(index) && !this.willIdealMove(index)) {\n                    return letters[Math.floor(Math.random() * 26)];\n                } else {\n                    return '!';\n                }\n            } else {\n                // baby will choose any of its top 20\n                // buff will choose any of its top 8\n                // boor will choose any of its top 5\n                var numTries = 5;\n                var bounds = Math.min(Math.ceil(5 / (1 - this.nonIdealMoveProbability[playerType])), finalChoices.length);\n                var finalSubspace = finalChoices.slice(Math.max(finalChoices.length - bounds, 0));\n                console.log(finalSubspace, bounds, this.sessionWordStore.wordsPlayed);\n                for(let t = 0; t < numTries; t++) {\n                var finalOutput = '';\n                if(wordFragment.length < this.settingsStore.minLengthOfValidWord && Math.random() < 0.7 && this.willIdealMove(index)) {\n                        finalOutput = finalChoices[Math.floor(Math.random() * finalChoices.length)][0];\n                } else {\n                var randomIndex = Math.random() * finalSubspace.length;\n                finalOutput = finalSubspace[Math.floor(randomIndex)][0];\n                }\n                var isInPlayed = this.sessionWordStore.wordsPlayed.map((x) => x.startsWith(wordFragment + finalOutput) ? 1 : 0).reduce((partialSum, a) => partialSum + a, 0);\n                console.log(finalOutput, isInPlayed)\n                if(isInPlayed) {\n                    // it's been played before in this session!\n                    continue;\n                } else {\n                    return finalOutput;\n                }\n              }\n            }\n            return finalChoices[Math.floor(Math.random() * finalChoices.length)][0];\n        },\n        getCurrentPlayerTime() {\n            console.log(this.gameScreenStore);\n            return this.gameScreenStore.timerArray[this.gameScreenStore.currentPlayerIndex].toString();\n        },\n        handleKeydown(e) {\n            if(this.currentPlayer !== \"You\") {\n                return;\n            }\n            this.gameScreenStore.depressedIndex = -1;\n            if(e.key == \".\" && this.currentFragment.length > 0) {\n                this.gameScreenStore.gameActive = !this.gameScreenStore.gameActive;\n                if(this.active) {\n                this.updateTimer();\n                }\n            } else if(this.active || this.currentFragment.length === 0) {\n            this.gameScreenStore.keypressQueue.push(e.key);\n            if(e.key == \"Enter\") {\n                this.updateFragment();\n            } else if(!(e.key.length === 1 && e.key.match(/[a-z]/i))) {\n                console.log(\"invalid input!\");\n            }\n            } else if(this.ended) {\n                if('abcdefghijklmnopqrstuvwxyz'.includes(e.key)) {\n                    this.gameScreenStore.currentWordFragment = this.currentFragment + (e.key);\n                } else if(e.key === 'Backspace' && this.gameScreenStore.currentWordFragment.length > this.gameScreenStore.frozenBluffFragment.length) {\n                    this.gameScreenStore.currentWordFragment = this.currentFragment.slice(0, this.currentFragment.length - 1);\n                } else if(e.key === 'Enter') {\n                    var result = '';\n                    var info = '';\n                    if(this.currentFragment in this.dictionaryStore.wordTable) {\n                        result = 'lost';\n                        info = 'You correctly said \\'' + this.currentFragment + '\\' is a valid word.'\n                    } else {\n                        result = 'won';\n                        info = 'You incorrectly thought \\'' + this.currentFragment + '\\' is a valid word.'\n                    }\n                    /*\n                    // if(result === 'won') {\n                    //     this.sessionWordStore.lastPlayerEndIndex = this.sessionWordStore.currentPlayers.indexOf(this.gameScreenStore.bluffCompetingPlayer);\n                    // } else {\n                    //     this.sessionWordStore.lastPlayerEndIndex = this.humanIndex;\n                    // }\n                    */\n                    this.resultsStore.p1 = this.gameScreenStore.bluffCompetingPlayer;\n                    this.resultsStore.p2 = 'You';\n                    this.resultsStore.result = result;\n                    this.resultsStore.info = info;\n                    this.resultsStore.event = 'bluff';\n                    this.$router.push({path: '/results'});\n                }\n            }\n        }\n    },\n    created() {\n        window.addEventListener('keydown', this.handleKeydown);\n        this.gameScreenStore.$reset();\n        this.gameScreenStore.completeGameSetup();\n    },\n    beforeUnmount() {\n        window.removeEventListener('keydown', this.handleKeydown);\n    },\n    computed: {\n        startOffsetIndex() {\n            return this.sessionWordStore.lastPlayerEndIndex;\n        },\n        getHumanColor() {\n            return this.playerColors[this.humanIndex];\n        },\n        humanIndex() {\n            return this.sessionWordStore.currentPlayers.indexOf('You');\n        },\n        humanTimeLeft() {\n            return this.timers[this.humanIndex];\n        },\n        totalPlayers() {\n            return this.sessionWordStore.currentPlayers.length;\n        },\n        currentPlayer: {\n            get() {\n                return this.sessionWordStore.currentPlayers[this.currentPlayerIndex];\n            },\n            set() {\n                this.gameScreenStore.currentPlayerIndex = this.humanIndex;\n            }\n        },\n        currentPlayerIndex() {\n            return this.gameScreenStore.currentPlayerIndex;\n        },\n        currentPlayerTime() {\n            return this.getCurrentPlayerTime();\n        },\n        keypresses() {\n            return this.gameScreenStore.keypressQueue;\n        },\n        timers() {\n            return this.gameScreenStore.timerArray;\n        },\n        active() {\n            return this.gameScreenStore.gameActive;\n        },\n        currentFragment() {\n            return this.gameScreenStore.currentWordFragment;\n        },\n        currentColor() {\n            return this.playerColors[this.currentPlayerIndex];\n        },\n        latestValidKeypress() {\n            var validKeypresses = this.keypresses.filter((x) => x === 'Enter' || 'abcdefghijlkmnopqrstuvwxyz'.includes(x));\n            var lastEvent = validKeypresses[validKeypresses.length - 1];\n            return lastEvent === 'Enter' ? '' : lastEvent;\n        },\n        depressed() {\n            return this.gameScreenStore.depressedIndex;\n        },\n        ended() {\n            return this.gameScreenStore.gameEnded;\n        },\n        isUserManagingBluff() {\n            return this.gameScreenStore.isUserRespondingToBluff;\n        }\n    },\nwatch: {\n    currentFragment: {\n        handler(value) {\n            if(value.length === 1) {\n                this.gameScreenStore.gameActive = true;\n            }\n        }\n    },\n    depressed: {\n        handler() {console.log('depressed change detected');}\n    },\n    isUserManagingBluff: {\n        handler() {console.log('user has been told to respond to a bluff!')}\n    }\n}\n}\n</script>\n\n<style scoped>\n.timer {\n    position: fixed;\n    left: calc(50% - min(7.5vw, 7.5vh));\n    top: 0;\n    width: calc(min(10vw, 10vh));\n    height: calc(min(10vw, 10vh));\n    border-radius: 50%;\n    margin-top: 1%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\nbutton {\n    background-color: #f0f0f3 !important;\n    border: none;\n    box-shadow: -10px -10px 10px rgba(255, 255, 255, 0.7), 10px 10px 10px rgba(174, 174, 192, 0.5);\n    border-radius: 1vw;\n    padding: calc(max(2vw, 2vh));\n}\n.depressedButton {\n    box-shadow: none;\n}\n.letterButton {\n    display: inline-flex;\n    margin: calc(min(1vw, 1vh));\n    width: calc(min(7vw, 7vh));\n    height: calc(min(7vw, 7vh));\n    padding: 0;\n    align-items: center;\n    justify-content: center;\n}\nbutton:active {\n    transform: translateY(1vh);\n    box-shadow: -10px -10px 10px rgba(255, 255, 255, 0.7) inset, 10px 10px 10px rgba(174, 174, 192, 0.2) inset;\n}\nspan {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    font-size: calc(max(2.5vw, 2.5vh));\n    font-weight: 600;\n    color: #354a68;\n}\n.challenge {\n    position: fixed;\n    top: 80vh;\n    left: calc(min(10vw, 10vh));\n    width: calc(min(35vw, 40vh));\n    height: calc(min(15vw, 15vh));\n}\n.bluff {\n    position: fixed;\n    top: 80vh;\n    right: calc(min(10vw, 10vh));\n    width: calc(min(35vw, 40vh));\n    height: calc(min(15vw, 15vh));\n}\n.slide-up-enter-active,\n.slide-up-leave-active {\n  transition: all 0.25s ease-out;\n}\n.slide-up-enter-from {\n  transform: translateY(30px);\n  opacity: 0;\n}\n.slide-up-leave-to {\n  transform: translateY(-30px);\n  opacity: 0;\n}\n.word-move, /* apply transition to moving elements */\n.word-enter-active,\n.word-leave-active {\n  transition: all 0.5s ease;\n}\n\n.word-enter-from,\n.word-leave-to {\n  opacity: 0;\n  transform: translateY(30px);\n}\n\n.list-leave-active {\n  position: absolute;\n}\n.currentPlayerTime {\n    position: fixed;\n    top: 5vh;\n    left: calc(100% - max(5vw, 5vh));\n    font-size: calc(max(2.5vw, 2.5vh));\n    font-weight: 600;\n    color: #354a68;\n}\n.indentLeft {\n    left: calc(100% - max(20vw, 20vh));\n}\n.wordFrame {\n    width: 100%;\n    height: 40%;\n    position: fixed;\n    left: 0;\n    top: 30%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n</style>","import { defineStore } from \"pinia\";\nimport TrieSearch from 'trie-search';\nimport { useSettingsStore } from \"@/stores/settingsStore\";\nexport const useDictionaryStore = defineStore(\n    {\n        id: 'dictionaryStore',\n        state: () => ({\n            trie: null,\n            wordTable: null,\n            }),\n        actions: {\n            // checkStatus() {\n            //     var indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n            //     const request2 = indexedDB.open('ProLongGameStorage');\n            //     request2.onupgradeneeded = (event) => {\n            //         console.log(\"handling upgrade needed.\");\n            //         var db = event.target.result;\n            //         if(!db.objectStoreNames.contains('wordTable')) {\n            //             db.createObjectStore('wordTable', {keyPath: 'tableName'});\n            //         }\n            //         var txn2 = event.target.transaction;\n            //         txn2.oncomplete = () => { console.log('created store. writing to storage.'); this.generationRoutine(); this.writeToStorage(db); }\n            //     }\n            //     request2.onsuccess = (event) => {\n            //         console.log(\"opened.\")\n            //         this.loadFromStorage(event.target.result);\n            //     }\n            //     request2.onerror = () => {\n            //         console.log('failed to interact with database.');\n            //         this.generationRoutine();\n            //     }     \n            // },\n            generationRoutine() {\n                const settingsStore = useSettingsStore();\n                const dictionary = require('../assets/ProLongWordDatabaseClean.json');\n                let dictionaryDict = dictionary['dictionary'];\n                this.generateTrie(dictionaryDict);\n                this.generateWordTable();\n                settingsStore.trieLoaded = true;\n            },\n            generateTrie(dictionaryDict) {\n                    var t = new TrieSearch();\n                    console.log(\"compiling trie\")\n                    for(let v in dictionaryDict) {\n                        t.map(v, v);\n                    }\n                    this.trie = t;\n            },\n            generateWordTable() {\n                const wt = require('../assets/ProLongWordTableClean.json');\n                let wordTable = wt['wordTable'];\n                this.wordTable = wordTable;\n                for(let u in this.wordTable) {\n                    wordTable[u][2] = wordTable[u][1] === 'U' ? (60 + Math.random() * 40) : (Math.random() * 60)\n                }\n            },\n            // writeToStorage(db) {\n            //     let wtTransaction = db.transaction('wordTable', 'readwrite');\n            //     let r2 = wtTransaction.objectStore('wordTable').add({'tableName': 'wordTable', 'table': JSON.stringify(this.wordTable)});\n            //     r2.onsuccess = () => {console.log(\"done saving word table.\"); };\n            //     r2.onerror = () => {console.log('failed to save word table.'); indexedDB.deleteDatabase('ProLongGameStorage'); };\n            // },\n            // loadFromStorage(db) {\n            //     const settingsStore = useSettingsStore();\n            //     this.trie = new TrieSearch();\n            //     var wordTableJSON = db.transaction('wordTable', 'readonly').objectStore('wordTable').get('wordTable');\n            //     wordTableJSON.onsuccess = (event) => {\n            //         console.log(\"received\");\n            //         this.wordTable = eval('(' + event.target.result['table'] + ')');\n            //         console.log(\"evaled.\");\n            //         for(let v in this.wordTable) {\n            //         this.trie.map(v, v);\n            //         }\n            //         console.log('trie generated');\n            //         console.log(this.trie.search('aba'));\n            //         settingsStore.trieLoaded = true;\n            //     }\n            // },\n        }\n}\n)","import { defineStore } from \"pinia\";\n\nexport const useResultsStore = defineStore(\n    {\n        id: 'resultsStore',\n        state: () => ({\n            p1: '',\n            p2: '',\n            result: '',\n            event: '',\n            info: '',\n    }),\n}\n);","import { render } from \"./gameScreen.vue?vue&type=template&id=fb3189ca&scoped=true\"\nimport script from \"./gameScreen.vue?vue&type=script&lang=js\"\nexport * from \"./gameScreen.vue?vue&type=script&lang=js\"\n\nimport \"./gameScreen.vue?vue&type=style&index=0&id=fb3189ca&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/anmolsingh/prolong_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb3189ca\"]])\n\nexport default __exports__","<template>\n    <vue3-snackbar top :duration=\"8000\"></vue3-snackbar>\n    <Transition name=\"fade\" mode=\"out-in\" appear>\n    <div>\n    <RaisedIconButton top=\"calc(min(5vw, 5vh))\" left=\"calc(min(5vw, 5vh))\" width=\"calc(min(10vw, 10vh))\" height=\"calc(min(10vw, 10vh))\" imgTop=\"calc(min(1.5vw, 1.5vh))\" imgLeft=\"calc(min(1.5vw, 1.5vh))\" imgSide=\"calc(min(7vw, 7vh))\" label=\"\" icon=\"home\" toScreen=\"/\"/>\n    <div v-if=\"notTimeEnd\">\n    <h1> Results </h1>\n    <h2 class=\"subtitle\"> {{p1}} called a {{event}} on {{p2}}. </h2>\n    <h2 class=\"subheading\"> {{p1}} {{result}}. </h2>\n    <h3 v-html=\"info\"></h3>\n    </div>\n    <div v-else>\n        <h2 class=\"subtitle\"> Game Ended on Time </h2>\n        <h2 class=\"subheading\"> {{pWord}} </h2>\n    </div>\n    <button class=\"replay\" @click=\"replay\"> <span>Replay</span> </button>\n    <button class=\"analyze\" @click=\"analyze\"> <span>Analyze</span> </button>\n    </div>\n    </Transition>\n</template>\n\n<script>\nimport {useResultsStore} from '@/stores/resultsStore';\nimport RaisedIconButton from '@/components/global/raisedIconButton.vue'\nimport { useSessionWordStore } from '@/stores/sessionWordStore';\nimport { useGameScreenStore } from '@/stores/gameScreenStore';\nimport { useSnackbar } from 'vue3-snackbar';\nimport { useDictionaryStore } from '@/stores/dictionaryStore';\nexport default {\n    name: 'ResultsScreen',\n    setup() {\n        const resultsStore = useResultsStore();\n        const sessionWordStore = useSessionWordStore();\n        const gameScreenStore = useGameScreenStore();\n        const dictionaryStore = useDictionaryStore();\n        const snackbar = useSnackbar();\n        const p1 = resultsStore.p1;\n        const p2 = resultsStore.p2;\n        const event = resultsStore.event;\n        const result = resultsStore.result;\n        const info = resultsStore.info;\n        return {p1, p2, event, result, info, sessionWordStore, gameScreenStore, snackbar, dictionaryStore};\n    },\n    created() {\n        this.notTime();\n    },\n    methods: {\n        notTime() {\n            return this.gameScreenStore.timerArray[this.gameScreenStore.currentPlayerIndex] >= 0;\n        },\n        possibleWord() {\n            var words = this.dictionaryStore.trie.search(this.gameScreenStore.currentWordFragment);\n            return words.length === 0 ? ('No word possible after ' + this.gameScreenStore.currentWordFragment) : (words[Math.floor(Math.random() * words.length)] + ' was possible from here.');\n        },\n        replay() {\n            // for p1\n            if(!this.notTime()) {\n                this.$router.push({path: '/game'});\n                return;\n            }\n            if(this.result === 'lost') {\n                // p2 wins \n                this.sessionWordStore.lastPlayerEndIndex = this.sessionWordStore.currentPlayers.indexOf(this.p2);\n            } else {\n                this.sessionWordStore.lastPlayerEndIndex = this.sessionWordStore.currentPlayers.indexOf(this.p1);\n            }\n            this.$router.push({path: '/game'});\n        },\n        analyze() {\n            console.log(this.sessionWordStore.lastPlayerEndIndex);\n            if(this.gameScreenStore.currentWordFragment.length < 3) {\n                this.snackbar.clear();\n                this.snackbar.add({type: 'warning', title: 'Error', text: 'Fragment is too small to analyze.'});\n                return;\n            } else {\n            this.$router.push({path: '/analyze'});\n            }\n        }\n    },\n    computed: {\n        notTimeEnd() {\n            return this.notTime();\n        },\n        pWord() {\n            return this.possibleWord();\n        }\n    },\n    components: {\n        RaisedIconButton,\n    }\n}\n</script>\n\n<style scoped>\ndiv {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n}\nh1 {\n    margin-top: 2%;\n    font-size: calc(max(6vw, 6vh));\n    font-weight: 600;\n    color: #354a68;   \n}\nh2 {\n    font-size: calc(max(4vw, 4vh));\n    font-weight: 550;\n    color: #009688; \n    margin: 1%;        \n}\n.subtitle {\n    position: fixed;\n    top: 20%;\n}\n.subheading {\n    position: fixed;\n    top: 30%;\n}\nh3 {\n    position: fixed;\n    bottom: 30%;\n    font-size: calc(max(3vw, 3vh));\n    font-weight: 450;\n    color: #3f51b5;\n    margin: 1%;          \n}\nbutton {\n    background-color: #f0f0f3 !important;\n    border: none;\n    box-shadow: -10px -10px 10px rgba(255, 255, 255, 0.7), 10px 10px 10px rgba(174, 174, 192, 0.5);\n    border-radius: 1vw;\n    padding: calc(max(2vw, 2vh));\n}\nbutton:active {\n    transform: translateY(1vh);\n    box-shadow: -10px -10px 10px rgba(255, 255, 255, 0.7) inset, 10px 10px 10px rgba(174, 174, 192, 0.2) inset;\n}\n.replay {\n    position: fixed;\n    top: 80vh;\n    left: calc(min(10vw, 10vh));\n    width: calc(min(35vw, 40vh));\n    height: calc(min(15vw, 15vh));\n}\n.analyze {\n    position: fixed;\n    top: 80vh;\n    right: calc(min(10vw, 10vh));\n    width: calc(min(35vw, 40vh));\n    height: calc(min(15vw, 15vh));\n}\nspan {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    font-size: calc(max(2.5vw, 2.5vh));\n    font-weight: 600;\n    color: #354a68;\n}\n</style>","import { render } from \"./resultsScreen.vue?vue&type=template&id=e8bb8058&scoped=true\"\nimport script from \"./resultsScreen.vue?vue&type=script&lang=js\"\nexport * from \"./resultsScreen.vue?vue&type=script&lang=js\"\n\nimport \"./resultsScreen.vue?vue&type=style&index=0&id=e8bb8058&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/anmolsingh/prolong_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e8bb8058\"]])\n\nexport default __exports__","<template>\n    <Transition name=\"fade\" mode=\"out-in\" appear>\n    <div id=\"visualization\">\n    <RaisedIconButton top=\"calc(min(5vw, 5vh))\" left=\"calc(min(5vw, 5vh))\" width=\"calc(min(10vw, 10vh))\" height=\"calc(min(10vw, 10vh))\" imgTop=\"calc(min(1.5vw, 1.5vh))\" imgLeft=\"calc(min(1.5vw, 1.5vh))\" imgSide=\"calc(min(7vw, 7vh))\" label=\"\" icon=\"backbutton\" toScreen=\"back\"/>\n    <h1> Analysis (for upto 100 words) for fragment: {{fragment}} </h1>\n    <h2> {{w}} </h2>\n    </div>\n    </Transition>\n</template>\n\n<script>\nimport {useDictionaryStore} from '@/stores/dictionaryStore';\nimport RaisedIconButton from '@/components/global/raisedIconButton.vue'\nimport { useGameScreenStore } from '@/stores/gameScreenStore';\nimport { useSettingsStore } from '@/stores/settingsStore';\nimport * as d3 from 'd3';\nimport { useSessionWordStore } from '@/stores/sessionWordStore';\nexport default {\n    name: 'AnalysisScreen',\n    setup() {\n        const dictionaryStore = useDictionaryStore();\n        const gameScreenStore = useGameScreenStore();\n        const settingsStore = useSettingsStore();\n        const sessionWordStore = useSessionWordStore();\n        return {dictionaryStore, gameScreenStore, settingsStore, sessionWordStore}\n    },\n    data() {\n        return {\n            w: '',\n        }\n    },\n    methods: {\n        getWords() {\n            var fragment = this.fragment;\n            var results = this.dictionaryStore.trie.search(fragment);\n            return results.length === 0 ? false : results;\n        },\n        generateHierarchyForD3(words) {\n            var root = words[0].slice(0, this.settingsStore.minLengthOfValidWord - 1);\n            var rootLine = root + ',';\n            var lines = [rootLine];\n            var text = 'name,parent\\n';\n            text += rootLine + '\\n';\n            for(let word of words.map(value => ({ value, sort: Math.random() })).sort((a, b) => a.sort - b.sort).map(({ value }) => value)) {\n                // aas,\n                // v_aas, aas\n                // o_aasv, v_aas\n                // e_aasvo, o_aasv\n                // l_aasvoe, e_aasvo\n                // v_aas, aas\n                // o_aasv, v_aas\n                // g_aasvo, o_aasv\n                // y_abut\n                var child = '';\n                var parent = '';\n                var f = '';\n                for(let i = this.settingsStore.minLengthOfValidWord - 1; i < word.length; i++) {\n                    parent = child === '' ? word.slice(0, i) : child;\n                    child = word[i] + '_' + word.slice(0, i);\n                    f = child + ',' + parent;\n                    if(!lines.includes(f)) {\n                        lines.push(f);\n                        text += f + '\\n';\n                    }\n                    if(lines.length >= 100) {\n                        break;\n                    }\n                }\n            }\n            return text;\n        },\n        hierarchy() {\n            var words = this.words;\n            if(words) {\n                var root = d3.csvParse(this.generateHierarchyForD3(words));\n                root = d3.stratify().id(d => d['name']).parentId(d => d['parent'])(root);\n                const width = window.innerWidth * 0.85;\n                const height = window.innerHeight * 0.85;\n                const radius = Math.min(width * 0.5, height * 0.5);\n                const svg = d3.select(\"#visualization\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`).attr(\"font-size\", 10);\n                const cluster = d3.cluster().size([360, radius * 0.9]);\n                cluster(root);\n                const linksGenerator = d3.linkRadial().angle(function(d) { return d.x / 180 * Math.PI; }).radius(function(d) { return d.y; });\n                svg.selectAll('path').data(root.links()).join('path').attr(\"d\", linksGenerator).style(\"fill\", 'none').attr(\"stroke\", '#354a68').style(\"stroke-width\", 3);\n                var nodes = svg.selectAll(\"g\").data(root.descendants()).join(\"g\").attr(\"transform\", function(d) { return `rotate(${d.x - 90}) translate(${d.y})`;});\n                var self = this;\n                console.log(self.sessionWordStore.lastPlayerEndIndex);\n                nodes.append(\"circle\").attr(\"r\", 8).style(\"fill\", d => (d.data.name.includes('_') ? (self.words.includes(d.data.name.slice(2) + d.data.name[0])) : false) ? ((self.sessionWordStore.currentPlayers[(d.data.name.length - 2 + self.sessionWordStore.lastPlayerEndIndex) % self.sessionWordStore.currentPlayers.length] === 'You') ? 'red' : 'green') : 'white').attr(\"stroke\", \"#354a68\").style(\"stroke-width\", 3).append('text').text((d) => d.data.name);\n                nodes.on(\"click\", (d) => {var c = d['target'] ?? d['toElement']; ['green', 'red'].includes(c['style']['fill']) ? window.open('https://www.merriam-webster.com/dictionary/' + c['textContent'].slice(2) + c['textContent'][0], '_blank') : ''}).on(\"mouseover\", (d) => {var c = d['target'] ?? d['toElement']; self.w = (c['textContent'].includes('_') ? (c['textContent'].slice(2) + c['textContent'][0]) : '')}).on(\"mouseleave\", () => (self.w = ''));\n                return '';\n             } else {\n                return ('No words possible after fragment: ' + this.fragment + '.');\n             } \n        }\n    },\n    mounted() {\n        this.hierarchy();\n        this.w = '';\n    },\n    computed: {\n        fragment() { \n            return this.gameScreenStore.currentWordFragment.slice(0, this.settingsStore.minLengthOfValidWord - 1);\n        },\n        words() {\n            return this.getWords();\n        },\n    },\n    components: {\n        RaisedIconButton,\n    }\n}\n</script>\n\n<style scoped>\nh1 {\n    margin-top: 2%;\n    font-size: calc(max(3vw, 3vh));\n    font-weight: 600;\n    color: #354a68;   \n}\nh2 {\n    font-size: calc(max(2vw, 2vh));\n    font-weight: 600;\n    color: #000;  \n    position: fixed;\n    right: 10%;\n    top: 20%;\n}\n</style>","import { render } from \"./analysisScreen.vue?vue&type=template&id=0f41c0c0&scoped=true\"\nimport script from \"./analysisScreen.vue?vue&type=script&lang=js\"\nexport * from \"./analysisScreen.vue?vue&type=script&lang=js\"\n\nimport \"./analysisScreen.vue?vue&type=style&index=0&id=0f41c0c0&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/anmolsingh/prolong_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0f41c0c0\"]])\n\nexport default __exports__","<template>\n    <RaisedIconButton top=\"calc(min(3vw, 3vh))\" left=\"calc(min(3vw, 3vh))\" width=\"calc(min(10vw, 10vh))\" height=\"calc(min(10vw, 10vh))\" imgTop=\"calc(min(1.5vw, 1.5vh))\" imgLeft=\"calc(min(1.5vw, 1.5vh))\" imgSide=\"calc(min(7vw, 7vh))\" label=\"\" icon=\"backbutton\" toScreen=\"back\"/>\n    <table><tbody>\n    <tr><th><h2 class=\"subtitle\"> For the Pros at making it Long </h2></th></tr>\n    <tr><th><h1> ProLong </h1></th></tr>\n    <tr><th class=\"answer\">\n    <span><i>Players are assembling ‘bridges’ of alphabets one letter at a time - and these bridges collapse as soon as they form valid words. Don’t be the one causing the collapses! </i></span>\n    </th></tr>\n    <tr><th>\n    <h2> The Game Explained: in FAQ style </h2>\n    </th></tr>\n    <tr><th>\n    <span class=\"question\"> Q. What is ProLong? </span>\n    </th></tr>\n    <tr><th class=\"answer\">\n    <span> \tProLong is a game where players engage in extending word ‘fragments’ to form the longest possible words. Starting with an empty ‘string’, each player suggests an alphabet, in order, under a time limit, and the goal is to keep extending this ‘fragment’ cogently until a valid word is formed. The game ends as soon as <i><u>the next player</u></i> points out a word has been formed (that the fragment has been “completed”).</span>\n    </th></tr>\n    <tr><th>\n    <span class=\"question\"> Q. What's with the underline in the previous question? </span>\n    </th></tr>\n    <tr><th class=\"answer\">\n    <span> That’s the trick part. Since the game only ends when a player points out that a valid word has been made, other players may, deceptively, choose to ‘bluff,’ i.e. say alphabets that do not lead to any valid word, if they think they can confuse the following players into believing the fragment is still extensible.  </span>\n    </th></tr>\n    <tr><th>\n    <span class=\"question\"> Q. How do I play? </span>\n    </th></tr>\n    <tr><th class=\"answer\">\n    <span> <span class=\"subheading\">Player Selection:</span> Choose your competitor(s). </span>\n    <img :src=\"require('@/assets/playerSelection.png')\"/>\n    </th></tr>\n    <tr><th class=\"answer\">\n<span><span class=\"subheading\">Game Screen:</span> Type your alphabet. Hit enter. Wait for your next turn.\nHit the ‘Valid’ button if you see a <u>valid word</u>, and the ‘Invalid’ button if you see a bluff. \nThe player who needs to move is shown in the top right corner. Your time remaining is shown top-center. Just type to add your alphabet (click in the window if you don’t see letters popping up). You’re allowed to edit your letter before you record it - so it will be shown translucently until you hit ‘enter/return’ on your keyboard, at which point it will get ‘raised’. The game ends after any challenge (invalid or valid), and then the player who wins starts the next round on replay. </span>\n    <br><br>\n    <span><span class=\"subheading\">Pausing:</span> To pause, press the period ('.') key on your keyboard. </span>\n    <img :src=\"require('@/assets/gameScreen.png')\"/>\n    </th></tr>\n    <tr><th>\n    <span class=\"question\"> Q. What's a valid word? What's the corresponding setting? </span>\n    </th></tr>\n    <tr><th class=\"answer\">\n    <span> First: definition of ‘valid word’ - anything in the dictionary (Merriam-Webster’s!) that is not an abbreviation or a proper noun. Basically any word that makes sense as is, and you wouldn’t capitalize it in a sentence. Second: there is one tricky setting you should know about. Minimum length of valid word: you may only challenge the <b>validity</b> of the fragment only when the fragment is at least this many letters long. This is because if no minimum existed, then no words starting with ‘a’ could be formed: ‘a’ is a valid word. Four is generally a good setting. Since this is essentially a vocabulary building game, if the minimum length was three, players could challenge words like ‘arm’ and ‘cat’ which are fairly trivial, so it seemed logical to use set to least four so words like ‘armature’ and ‘catalog’ can be safely made. Please note this does <b>not</b> apply to <b>invalidity</b>. So if a player adds to make the fragment ‘xd’ (haha) then the next player is legally allowed to call out the bluff, irrespective of this fragment being just two letters long.</span>\n    <img :src=\"require('@/assets/settingsScreen.png')\"/>\n    </th></tr>\n    <tr><th>\n    <span class=\"question\"> Q. How does challenging ‘valid’ words work in multiplayer?  </span>\n    </th></tr>\n    <tr><th class=\"answer\">\n    <span> It’s a little special - to safeguard a good player’s interests. Imagine you were competing with two computer bots. You started with ’s.’ The game went on: ‘m’ - ‘a’ - ‘r’ - ’t’ [alphabets you would say are underlined]. At this point, the second bot should challenge the first one since the valid word ‘smart’ has been formed, but bots can play non-ideally. So what if the second bot colluded with the first one, and ended up saying ‘l’ (as in London)! So the word fragment becomes ‘smartl’ and now it’s your turn. You shouldn’t have to say ‘y’ and lose. You should be able to point out that ‘smart’ is a valid word. That’s exactly it. So, in multiplayer, you need to ‘depress’ the letter that makes the valid word, and then hit the ‘Valid’ button. So here, you would press ’t’ on the fragment, and then hit the ‘Valid’ button.</span>\n    <img :src=\"require('@/assets/challengingMultiplayer.gif')\"/>\n    </th></tr>\n    <tr><th>\n    <span class=\"question\"> Q. What’s ‘Analyze’? </span>\n    </th></tr>\n    <tr><th class=\"answer\">\n    <span> 'Analyze' is an experimental tab that allows you to see how the game could have progressed ideally (no bluffs) after the first three letters of the fragment. Nodes highlighted in green are words you could have made to win, and nodes in red are words which would have resulted in a loss for you. Hovering the mouse over a node reveals the word in the top right corner of the screen, and you can also click on nodes to open their definitions in new tabs, powered by Merriam-Webster’s Dictionary!</span>\n    <img :src=\"require('@/assets/analyzeScreen.gif')\"/>\n    </th></tr>\n    <tr><th class=\"answer\">\n    <span class=\"question\"> Q. Sample gameplay GIFs? </span>\n    <span> 1v1 BuffBot. Player starts with 'a', loses on aqua.</span>\n    <img :src=\"require('@/assets/gameplay1.gif')\"/>\n    <br><br>\n    <span> Multiplayer vs 2 BabyBots. Player starts with 'i', bots extend to 'irk' (minimum length is 4 so no challenge here), player continues to say 'i' and eventually wins the game after an incorrect bluff challenge by the first BabyBot. </span>\n    <img :src=\"require('@/assets/gameplay2.gif')\"/>\n    </th></tr>\n    <tr><th>\n    <h2 class=\"bottom\"> Whatever you do, just make it long. </h2>\n    </th></tr>\n    </tbody>\n    </table>\n</template>\n\n<script>\nimport RaisedIconButton from '@/components/global/raisedIconButton.vue'\nexport default {\n  name: 'RulesScreen',\n  components: {\n    RaisedIconButton,\n  }\n}\n</script>\n\n<style scoped>\nh2 {\n    font-weight: 400;\n    color: #7a81ff;\n    font-size: calc(max(2.5vw, 2.5vh));\n}\n.bottom {\n    margin-bottom: 5%;\n}\n.subtitle {\n    margin-bottom: 0;\n}\nh1 {\n    margin-top: 0;\n    color: #011993;\n    font-size: calc(max(4vw, 4vh));\n}\nspan {\n    font-size: calc(max(1.5vw, 1.5vh));\n}\n.question {\n    font-weight: 600;\n}\n.answer {\n    font-weight: 300;\n    padding-left: 7%;\n    text-align: justify;\n}\n.subheading {\n    font-weight: 500;\n}\ntable {\n    position: fixed;\n    left: 5%;\n    top: 12%;\n    width: 92%;\n    height: 95%;\n    text-align: left;\n    border-collapse: separate;\n    border-spacing: 0 1em;\n}\ntbody {\n    display: block;\n    overflow-y: scroll;\n    height: 100%;\n    max-height: 100%;\n    -ms-overflow-style: none; \n    min-height: 0;\n    scrollbar-width: none;\n}\ntbody::-webkit-scrollbar {\n  display: none;\n}\nimg {\n    display: block;\n    margin-top: 2%;\n    margin-bottom: 2%;\n    width: 100%;\n    height: calc(min(80vw, 80vh));\n    margin-left: 0;\n}\n\n</style>","import { render } from \"./rulesScreen.vue?vue&type=template&id=11905d9f&scoped=true\"\nimport script from \"./rulesScreen.vue?vue&type=script&lang=js\"\nexport * from \"./rulesScreen.vue?vue&type=script&lang=js\"\n\nimport \"./rulesScreen.vue?vue&type=style&index=0&id=11905d9f&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/anmolsingh/prolong_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-11905d9f\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport { createRouter, createWebHashHistory } from 'vue-router';\nimport { SnackbarService, Vue3Snackbar } from 'vue3-snackbar';\nimport \"vue3-snackbar/dist/style.css\";\nimport { createPinia } from 'pinia';\nimport HomeScreen from './components/home/homeScreen'\nimport PlayerSelectionScreen from './components/playerSelection/playerSelectionScreen'\nimport SettingsScreen from './components/settings/settingsScreen'\nimport GameScreen from './components/gameplay/gameScreen'\nimport ResultsScreen from './components/results/resultsScreen'\nimport AnalysisScreen from './components/analysis/analysisScreen'\nimport RulesScreen from './components/rules/rulesScreen'\n\nconst routes = [\n     { path: '/', component: HomeScreen },\n     { path: '/playerSelection', component: PlayerSelectionScreen },\n     { path: '/settings', component: SettingsScreen },\n     { path: '/game', component: GameScreen },\n     {path: '/results', component: ResultsScreen},\n     {path: '/analyze', component: AnalysisScreen},\n     {path: '/rules', component: RulesScreen}\n   ];\n  \nconst router = createRouter({\n   history: createWebHashHistory(),\n   routes,\n })\n  \n  const app = createApp(App)\n  const pinia = createPinia()\n\n  app.use(SnackbarService);\n  app.component(\"vue3-snackbar\", Vue3Snackbar);\n  app.use(router)\n  app.use(pinia)\n  \n  app.mount('#app')","var map = {\n\t\"./baby.svg\": 8438,\n\t\"./backbutton.svg\": 8803,\n\t\"./boor.svg\": 6725,\n\t\"./buff.svg\": 8506,\n\t\"./forwardbutton.svg\": 8958,\n\t\"./home.svg\": 2781,\n\t\"./howto.svg\": 8389,\n\t\"./multi.svg\": 3542,\n\t\"./play.svg\": 5570,\n\t\"./settings.svg\": 4369\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 968;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/prolonggame/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkprolong_game\"] = self[\"webpackChunkprolong_game\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9011); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","Component","_createVNode","_Transition","name","mode","appear","_createElementBlock","key","Math","random","_resolveDynamicComponent","components","__exports__","render","_component_GameTitle","_component_RaisedIconButton","top","left","width","height","imgTop","imgLeft","imgSide","label","icon","toScreen","class","_createElementVNode","_hoisted_2","_hoisted_3","props","style","$options","onClick","_toDisplayString","$props","src","require","alt","this","methods","navigate","$router","go","push","path","computed","GameTitle","RaisedIconButton","_hoisted_1","_component_PlayerCard","avatar","useSettingsStore","defineStore","id","state","minLengthOfValidWord","numBotsMultiplayer","multiplayerMixed","difficultyMultiplayer","timePerRound","trieLoaded","useSessionWordStore","currentPlayers","wordsPlayed","lastPlayerEndIndex","actions","setPlayers","choice","settingsStore","generatedPlayers","i","floor","toString","useGameScreenStore","currentWordFragment","currentPlayerIndex","timerArray","keypressQueue","gameActive","gameEnded","depressedIndex","isUserRespondingToBluff","frozenBluffFragment","bluffCompetingPlayer","completeGameSetup","sessionWordStore","Array","length","fill","setup","gameScreenStore","$reset","setAndNavigate","spacing","PlayerCard","_component_VueMultiselect","$data","options","searchable","placeholder","_hoisted_5","_hoisted_7","_hoisted_9","_hoisted_11","data","selectedMinLength","minLengths","selectedNumberOfBots","numberOfBots","allowMixing","mixingOptions","timeInSeconds","timeOptions","multiplayerDifficulty","multiplayerDifficultyOptions","mounted","console","log","updateMinLength","value","updateNumberOfBots","updateMixing","updateTimePerRound","updateMultiplayerDifficulty","indexOf","VueMultiselect","_hoisted_10","_hoisted_12","_component_vue3_snackbar","duration","_TransitionGroup","_Fragment","_renderList","l","index","_hoisted_6","$setup","useDictionaryStore","trie","wordTable","generationRoutine","dictionary","dictionaryDict","generateTrie","generateWordTable","t","TrieSearch","v","map","wt","u","useResultsStore","p1","p2","result","event","info","async","getLetterAsync","object","self","Promise","resolve","setTimeout","getBotMove","currentFragment","max","dictionaryStore","resultsStore","snackbar","useSnackbar","playerColors","rotateRightColorIndex","slice","concat","nonIdealMoveProbability","groupBy","xs","reduce","rv","x","clear","updateFragment","updateTimer","parseInt","currentPlayerTime","timers","depressButtons","add","type","title","text","currentPlayer","willIdealMove","playerIndex","includes","gameEnd","p2Index","resultPossibilities","endWords","infoPossibilities","wordToAnalyze","depressed","truth","totalPlayers","foundWord","p2Type","replace","j","startsWith","startOffsetIndex","bluff","challenge","targetIndex","inputtedLetter","match","then","wordFragment","playerType","roundErrorTerm","letters","vocabularyStrengthFactor","results","possibleWordsUponAddingL","search","groupedByLengthWords","wins","losses","unabridged","abridged","possibleWordsUponAddingLOfGivenLength","w","filteredContainingLengths","filter","potentialResults","loss","cl","ls","wlPercentage","finalChoices","sort","a","b","numTries","bounds","min","ceil","finalSubspace","finalOutput","randomIndex","isInPlayed","partialSum","getCurrentPlayerTime","handleKeydown","e","active","ended","created","window","addEventListener","beforeUnmount","removeEventListener","getHumanColor","humanIndex","humanTimeLeft","get","set","keypresses","currentColor","latestValidKeypress","validKeypresses","lastEvent","isUserManagingBluff","watch","handler","innerHTML","notTime","possibleWord","words","replay","analyze","notTimeEnd","pWord","getWords","fragment","generateHierarchyForD3","root","rootLine","lines","word","child","parent","f","hierarchy","d3","d","parentId","innerWidth","innerHeight","radius","svg","append","attr","cluster","size","linksGenerator","angle","PI","y","selectAll","links","join","nodes","descendants","on","c","open","_hoisted_4","_hoisted_8","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_19","_hoisted_21","_hoisted_23","_hoisted_25","_hoisted_27","_hoisted_29","_hoisted_32","_hoisted_33","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_39","routes","component","HomeScreen","PlayerSelectionScreen","SettingsScreen","GameScreen","ResultsScreen","AnalysisScreen","RulesScreen","router","createRouter","history","createWebHashHistory","app","createApp","App","pinia","createPinia","use","SnackbarService","Vue3Snackbar","mount","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","n","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","forEach","bind","__webpack_exports__"],"sourceRoot":""}